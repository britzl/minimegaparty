local input = require "ludobits.m.input"
local flow = require "ludobits.m.flow"

go.property("power1", 5)
go.property("power2", 5)
go.property("power3", 5)
go.property("power4", 5)

local function update_score(self)
	label.set_text("#score", tostring(self.left_score) .. " - " .. tostring(self.right_score))
end

local function enable_powerbar(id)
	msg.post("power" .. id, "enable")
	msg.post("powerbar" .. id, "enable")
	go.cancel_animations("#", "power" .. id)
	go.set("#", "power" .. id, 5)
	go.animate("#", "power" .. id, go.PLAYBACK_LOOP_PINGPONG, 1000, go.EASING_LINEAR, 0.7)
end

local function disable_powerbar(id)
	go.cancel_animations("#", "power" .. id)
	msg.post("power" .. id, "disable")
	msg.post("powerbar" .. id, "disable")
end

function init(self)
	self.players = {}
	self.left_score = 0
	self.right_score = 0
	update_score(self)
	--[[msg.post(".", "start", {
		{ action_id = hash("KEY_Q"), player_id = 1, action_name = "Q" },
		{ action_id = hash("KEY_W"), player_id = 2, action_name = "W" },
		{ action_id = hash("KEY_E"), player_id = 3, action_name = "E" },
		{ action_id = hash("KEY_R"), player_id = 4, action_name = "R" },
	})--]]
	for i=1,4 do
		disable_powerbar(i)
	end
end

function final(self)
	input.release()
end

function update(self, dt)
	flow.update(dt)
	for i=1,#self.players do
		local power = go.get("#", "power" .. i)
		go.set_scale(vmath.vector3(math.max(0.05, power / 1000), 1, 1), "power" .. i)
	end
end

function on_message(self, message_id, message, sender)
	flow.on_message(message_id, message, sender)
	if message_id == hash("start") then
		input.acquire()
		self.players = message
		for _,player in ipairs(self.players) do
			player.can_throw = true
			label.set_text("player" .. player.player_id .. "#action", player.action_name)
			--go.animate("player" .. player.player_id, "position.y", go.PLAYBACK_ONCE_FORWARD, 31, go.EASING_INQUAD, 0.4)
			
			flow(function()
				while true do
					enable_powerbar(player.player_id)
					flow.until_true(function()
						return not player.can_throw
					end)
				end
			end)
		end
		for i=#self.players+1,4 do
			print("delete", i)
			go.delete("player" .. i)
			go.delete("power" .. i)
			go.delete("powerbar" .. i)
		end
	elseif message_id == hash("snowballhit") then
		if message.team == hash("left") then
			self.right_score = self.right_score + 1
		else
			self.left_score = self.left_score + 1
		end
		update_score(self)
	end
end

function on_input(self, action_id, action)
	if action.released then
		for i,player in pairs(self.players) do
			if player.action_id == action_id and player.can_throw then
				player.can_throw = false
				disable_powerbar(player.player_id)
				local player_position = go.get_position("player" .. player.player_id)
				local power = go.get("#", "power" .. player.player_id)
				local direction = (player.player_id == 2 or player.player_id == 4) and -1 or 1
				local ball_position = player_position + vmath.vector3(20 * direction, 10, 0)
				local force = vmath.vector3(direction, 1.25, 0) * power * 200
				local snowball = factory.create("#snowballfactory", ball_position)
				msg.post(snowball, "apply_force", { force = force, position = ball_position })
				--msg.post("#hitsound", "play_sound", { delay = 0, gain = 1.0 })
				flow(function()
					flow.delay(2)
					go.delete(snowball)
					player.can_throw = true
				end)
			end
		end
	end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
